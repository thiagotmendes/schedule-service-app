{
    "openapi": "3.0.0",
    "info": {
        "title": "Schedule Service API",
        "description": "API for managing scheduling services, clients, and providers",
        "contact": {
            "name": "API Support",
            "email": "admin@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "description": "Display a listing of the resource.",
                "operationId": "09fd012ab97514481bde57bbeac2699b",
                "responses": {
                    "200": {
                        "description": "List of all appointments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "client_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "provider_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "scheduled_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-06-15T14:30:00Z"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "description": "Store a newly created resource in storage.",
                "operationId": "15017f04a457b26e2a870c8a011a407a",
                "requestBody": {
                    "description": "Appointment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "provider_id",
                                    "service_id",
                                    "scheduled_at"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Client ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "provider_id": {
                                        "description": "Provider ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "scheduled_at": {
                                        "description": "Appointment date and time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-06-15T14:30:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "client_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "provider_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "service_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "scheduled_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-15T14:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "client_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The client id field is required."
                                                    }
                                                },
                                                "provider_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provider id field is required."
                                                    }
                                                },
                                                "service_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The service id field is required."
                                                    }
                                                },
                                                "scheduled_at": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The scheduled at must be a date after now."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get a specific appointment by ID",
                "description": "Display the specified resource.",
                "operationId": "13b46cd03a1dae29a4c4dd6e756d37da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "client_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "provider_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "service_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "scheduled_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-06-15T14:30:00Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Appointment] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Atualiza completamente um agendamento",
                "description": "Substitui todos os campos obrigatórios de um agendamento",
                "operationId": "putAppointment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do agendamento",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "provider_id",
                                    "service_id",
                                    "scheduled_at"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Client ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "provider_id": {
                                        "description": "Provider ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "scheduled_at": {
                                        "description": "Appointment date and time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-06-15T14:30:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agendamento atualizado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agendamento não encontrado"
                    },
                    "422": {
                        "description": "Erro de validação"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "description": "Remove the specified resource from storage.",
                "operationId": "cc5727c249d22f6719923c09625213e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Appointment] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Atualiza parcialmente um agendamento",
                "description": "Atualiza um ou mais campos de um agendamento existente",
                "operationId": "patchAppointment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do agendamento",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "description": "Client ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "provider_id": {
                                        "description": "Provider ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "scheduled_at": {
                                        "description": "Appointment date and time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-06-15T14:30:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Atualização parcial bem-sucedida",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agendamento não encontrado"
                    },
                    "422": {
                        "description": "Erro de validação"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registrar novo usuário",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Joana Souza"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "joana@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    },
                                    "role": {
                                        "description": "Função do usuário. Ex: admin, client, provider",
                                        "type": "string",
                                        "example": "client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Usuário registrado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcde12345..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erro de validação",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Autenticar usuário",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login realizado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcde12345..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout do usuário autenticado",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout realizado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autenticado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "description": "Returns a list of all clients",
                "operationId": "getClientsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Jane Smith"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "jane@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "123-456-7890"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Creates a new client and returns the created data",
                "operationId": "storeClient",
                "requestBody": {
                    "description": "Client data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Client name",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "email": {
                                        "description": "Client email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "phone": {
                                        "description": "Client phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a specific client",
                "description": "Returns a specific client by ID",
                "operationId": "getClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Smith"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "jane@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "123-456-7890"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a client",
                "description": "Updates a client and returns the updated data",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Client data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Client name",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "email": {
                                        "description": "Client email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "phone": {
                                        "description": "Client phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "description": "Deletes a client and returns a success message",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a client (partial)",
                "description": "Partially updates a client and returns the updated data. Uses the same endpoint as PUT.",
                "operationId": "patchClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of client to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Client data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Client name",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "email": {
                                        "description": "Client email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "phone": {
                                        "description": "Client phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/client/profile": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Obter perfil do cliente autenticado",
                "operationId": "080ef6fe3cabc7066b860c31dd086339",
                "responses": {
                    "200": {
                        "description": "Perfil do cliente retornado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client profile data"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "(11) 99999-9999"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Perfil do cliente não encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/providers": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get all providers",
                "description": "Returns a list of all providers",
                "operationId": "getProvidersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "123-456-7890"
                                            },
                                            "document": {
                                                "type": "string",
                                                "example": "12345678901"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Providers"
                ],
                "summary": "Create a new provider",
                "description": "Creates a new provider and returns the created data",
                "operationId": "storeProvider",
                "requestBody": {
                    "description": "Provider data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "document"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Provider name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Provider email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Provider phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "document": {
                                        "description": "Provider document (11 characters)",
                                        "type": "string",
                                        "example": "12345678901"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Provider created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                },
                                                "document": {
                                                    "type": "string",
                                                    "example": "12345678901"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                },
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The document must be 11 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/providers/{id}": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get a specific provider",
                "description": "Returns a specific provider by ID",
                "operationId": "getProviderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of provider to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "123-456-7890"
                                        },
                                        "document": {
                                            "type": "string",
                                            "example": "12345678901"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Provider not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Providers"
                ],
                "summary": "Update a provider",
                "description": "Updates a provider and returns the updated data",
                "operationId": "updateProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of provider to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provider data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "document"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Provider name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Provider email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Provider phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "document": {
                                        "description": "Provider document (11 characters)",
                                        "type": "string",
                                        "example": "12345678901"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                },
                                                "document": {
                                                    "type": "string",
                                                    "example": "12345678901"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Provider not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                },
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The document must be 11 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Providers"
                ],
                "summary": "Delete a provider",
                "description": "Deletes a provider and returns a success message",
                "operationId": "deleteProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of provider to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Provider not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Providers"
                ],
                "summary": "Update a provider (partial)",
                "description": "Partially updates a provider and returns the updated data. Uses the same endpoint as PUT.",
                "operationId": "patchProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of provider to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provider data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Provider name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Provider email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Provider phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "document": {
                                        "description": "Provider document (11 characters)",
                                        "type": "string",
                                        "example": "12345678901"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "123-456-7890"
                                                },
                                                "document": {
                                                    "type": "string",
                                                    "example": "12345678901"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Provider not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                },
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The document must be 11 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/provider/profile": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "summary": "Obter perfil do prestador autenticado",
                "operationId": "d6d4f198ae76c853475d7190849e50f3",
                "responses": {
                    "200": {
                        "description": "Perfil do provider retornado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider profile data"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "(11) 99999-8888"
                                                },
                                                "document": {
                                                    "type": "string",
                                                    "example": "12345678900"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Perfil do provider não encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Provider profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/providers/{providerId}/services": {
            "post": {
                "tags": [
                    "Provider Services"
                ],
                "summary": "Attach services to a provider",
                "description": "Attach services to a provider",
                "operationId": "1eb2387edfcb48002e19b4a269ade5d5",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "Provider ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service IDs to attach",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_ids"
                                ],
                                "properties": {
                                    "service_ids": {
                                        "description": "Array of service IDs to attach to the provider",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Services attached successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Serviços vinculados com sucesso"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Provider] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "service_ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The service ids field is required."
                                                    }
                                                },
                                                "service_ids.0": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected service_ids.0 is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "description": "Returns a list of all services",
                "operationId": "getServicesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Haircut"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Standard haircut service"
                                            },
                                            "duration": {
                                                "description": "Duration in minutes",
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Creates a new service and returns the created data",
                "operationId": "storeService",
                "requestBody": {
                    "description": "Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "duration",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Haircut"
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Standard haircut service"
                                    },
                                    "duration": {
                                        "description": "Duration in minutes",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Haircut"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Standard haircut service"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "duration": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The duration must be at least 1."
                                                    }
                                                },
                                                "price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The price field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service",
                "description": "Returns a specific service by ID",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Haircut"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Standard haircut service"
                                        },
                                        "duration": {
                                            "type": "integer",
                                            "example": 30
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Updates a service and returns the updated data",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "duration",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Haircut"
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Standard haircut service"
                                    },
                                    "duration": {
                                        "description": "Duration in minutes",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Haircut"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Standard haircut service"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "duration": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The duration must be at least 1."
                                                    }
                                                },
                                                "price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The price field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Deletes a service and returns a success message",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service (partial)",
                "description": "Partially updates a service and returns the updated data. Uses the same endpoint as PUT.",
                "operationId": "patchService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Haircut"
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Standard haircut service"
                                    },
                                    "duration": {
                                        "description": "Duration in minutes",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Haircut"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Standard haircut service"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "duration": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The duration must be at least 1."
                                                    }
                                                },
                                                "price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The price field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "API Endpoints for managing appointments"
        },
        {
            "name": "Clients",
            "description": "API Endpoints for Client management"
        },
        {
            "name": "Services",
            "description": "API Endpoints for Service management"
        },
        {
            "name": "Providers",
            "description": "API Endpoints for Provider management"
        },
        {
            "name": "Provider Services",
            "description": "API Endpoints for managing provider services"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Client",
            "description": "Client"
        },
        {
            "name": "Provider",
            "description": "Provider"
        }
    ]
}